@using TBA.Models.DTOs
@model List<TaskViewModel>

@{
    var username = ViewBag.Username?.ToLower();
    var userTasks = Model.Where(m => m.AssignedUserName?.ToLower() == username).ToList();
    var groupedBoards = userTasks.GroupBy(t => t.BoardName);
}

<div class="container-fluid">
    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="card-title mb-0">
            My tasks in: @Model.FirstOrDefault()?.BoardName
        </h4>
        <a asp-controller="Cards"
           asp-action="Create"
           asp-route-boardId="@Model.FirstOrDefault()?.BoardId"
           class="btn btn-primary">
            New Card
        </a>
    </div>

    @foreach (var boardGroup in groupedBoards)
    {
        var listsOrdered = boardGroup
        .GroupBy(t => new { t.ListId, t.ListName, t.ListPosition })
        .OrderBy(g => g.Key.ListPosition);

        <div class="mb-5 p-3 border rounded bg-light shadow-sm">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <small>
                    <strong>Members:</strong>
                    @string.Join(", ", boardGroup.First().Members ?? new List<string>())
                </small>
            </div>

            <div class="d-flex gap-3 overflow-auto pb-3">
                @foreach (var listGroup in listsOrdered)
                {
                    var listId = listGroup.Key.ListId;
                    var listName = listGroup.Key.ListName;
                    var taskCount = listGroup.Count();

                    <div class="card flex-shrink-0" style="width:300px;">
                        <div class="card-body dropzone"
                             data-list-id="@listId"
                             style="display:flex; flex-direction:column; height:80vh;">
                            <h5 class="list-title text-uppercase fw-bold text-primary mb-3" style="flex:0 0 auto;">
                                @listName <span class="task-count">(@taskCount)</span>
                            </h5>
                            <div class="vstack gap-2 flex-grow-1 list-cards" style="overflow-y:auto;">
                                @foreach (var task in listGroup.OrderBy(t => t.ListPosition))
                                {
                                    <div class="task-card"
                                         draggable="true"
                                         data-card-id="@task.CardId">
                                        @await Html.PartialAsync("Partial/_TaskCard", task)
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

<style>
    .task-card {
        cursor: grab;
        user-select: none;
    }

        .task-card:active {
            cursor: grabbing;
        }

    .dragging {
        opacity: 0.6;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .list-title {
        position: sticky;
        top: 0;
        background: #fff;
        z-index: 10;
        padding-bottom: .5rem;
        margin-bottom: 1rem;
        border-bottom: 1px solid #ddd;
    }
</style>

<script src="~/js/board.js"></script>
<script src="~/js/checklist.js"></script>
<script src="~/js/comments.js"></script>
<script src="~/js/labels.js"></script>
