@model TBA.Mvc.Controllers.BoardViewViewModel
@using TBA.Models.DTOs

<div class="container-fluid">
    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="card-title mb-0">
            My tasks in: @Model.Board?.Name
        </h4>

        <div class="d-flex align-items-center gap-3">
            <!-- Panel de notificaciones -->
            <div class="notifications">
                <h5 class="mb-1">Notificaciones</h5>
                <ul class="list-unstyled mb-0">
                    @{
                        var notifications = ViewBag.Notifications as List<TBA.Models.Entities.Notification> ?? new List<TBA.Models.Entities.Notification>();
                    }

                    @if (notifications.Any())
                    {
                        foreach (var n in notifications)
                        {
                            <li>
                                @n.Message
                                <small class="text-muted">(@n.NotifyAt?.ToLocalTime().ToString("g"))</small>
                            </li>
                        }
                    }
                    else
                    {
                        <li>No hay notificaciones nuevas.</li>
                    }

                </ul>
            </div>

            <a asp-controller="Cards"
               asp-action="Create"
               asp-route-boardId="@Model.Board.BoardId"
               class="btn btn-primary">
                New Card
            </a>
        </div>
    </div>

    <div class="mb-5 p-3 border rounded bg-light shadow-sm">
        <div class="d-flex gap-3 overflow-auto pb-3">
            @foreach (var listVm in Model.Lists)
            {
                var list = listVm.List;
                var cards = listVm.Cards ?? new List<TBA.Models.DTOs.TaskViewModel>();

                <div class="card flex-shrink-0" style="width:300px;">
                    <div class="card-body dropzone"
                         data-list-id="@list.ListId"
                         style="display:flex; flex-direction:column; height:80vh;">
                        <h5 class="list-title text-primary mb-3">
                            @list.Name <span class="task-count">(@cards.Count)</span>
                        </h5>

                        <div class="vstack gap-2 flex-grow-1 list-cards @(cards.Count == 0 ? "empty" : "")"
                             style="overflow-y:auto;">
                            @foreach (var task in cards)
                            {
                                <div class="task-card"
                                     draggable="true"
                                     data-card-id="@task.CardId"
                                     style="border-left:6px solid @(string.IsNullOrWhiteSpace(task.LabelColor) ? "#e9ecef" : task.LabelColor)">
                                    @await Html.PartialAsync("Partial/_TaskCard", task)
                                </div>
                            }

                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .list-cards.empty {
        border: 2px dashed #d0d7de;
        background: #f8fafc;
        min-height: 120px;
    }

    .task-card {
        cursor: grab;
        user-select: none;
    }

        .task-card:active {
            cursor: grabbing;
        }

    .list-title {
        position: sticky;
        top: 0;
        background: #fff;
        z-index: 10;
        padding-bottom: .5rem;
        margin-bottom: 1rem;
        border-bottom: 1px solid #ddd;
    }

    /* Estilo básico para el panel de notificaciones */
    .notifications {
        max-width: 250px;
        background-color: #f1f3f5;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }

        .notifications ul {
            margin: 0;
            padding: 0;
            list-style: none;
            max-height: 200px;
            overflow-y: auto;
        }

        .notifications li {
            margin-bottom: 0.3rem;
        }
</style>

<!-- Modal -->
<div class="modal fade" id="confirmDeleteCardModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar eliminación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body">
                <p>Do you want to delete <strong id="deleteCardTitle"></strong> card?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="btnConfirmDeleteCard">Yes, delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
          let pendingCardId = null;

          document.addEventListener('click', e => {
            const btn = e.target.closest('.js-open-delete-card');
            if (!btn) return;
            pendingCardId = btn.dataset.cardId;
            document.getElementById('deleteCardTitle').textContent = btn.dataset.cardTitle || '';
            new bootstrap.Modal(document.getElementById('confirmDeleteCardModal')).show();
          });

          document.getElementById('btnConfirmDeleteCard').addEventListener('click', () => {
            if (!pendingCardId) return;
            const form = document.getElementById('delForm-' + pendingCardId);
            if (form) form.submit();
          });
        })();
    </script>
}


<script src="~/js/board.js"></script>
<script src="~/js/checklist.js"></script>
<script src="~/js/comments.js"></script>
<script src="~/js/labels.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
<script src="~/js/notifications.js"></script>
