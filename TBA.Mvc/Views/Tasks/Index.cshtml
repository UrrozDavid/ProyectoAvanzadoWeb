@using TBA.Models.DTOs
@model List<TaskViewModel>

@{
    var username = ViewBag.Username?.ToLower();
    var userTasks = Model.Where(m => m.AssignedUserName?.ToLower() == username).ToList();
    var todoTasks = userTasks.Where(t => t.ListName == "TO DO").ToList();
    var inProgressTasks = userTasks.Where(t => t.ListName == "IN PROGRESS").ToList();
    var doneTasks = userTasks.Where(t => t.ListName == "DONE").ToList();


}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4>My Tasks</h4>
        <a asp-controller="Tasks" asp-action="Create" class="btn btn-success">Add New</a>
    </div>

    <div class="card">
        <div class="card-body">
            @if (userTasks.Any())
            {
                <h5 class="text-primary">TO DO</h5>
                @foreach (var task in todoTasks)
                {
                    @Html.Partial("Partial/_TaskCard", task)
                }

                <h5 class="text-warning mt-4">IN PROGRESS</h5>
                @foreach (var task in inProgressTasks)
                {
                    @Html.Partial("Partial/_TaskCard", task)
                }

                <h5 class="text-success mt-4">DONE</h5>
                @foreach (var task in doneTasks)
                {
                    @Html.Partial("Partial/_TaskCard", task)
                }
            }
            else
            {
                <p class="text-muted">No assigned tasks.</p>
            }
        </div>
    </div>
</div>