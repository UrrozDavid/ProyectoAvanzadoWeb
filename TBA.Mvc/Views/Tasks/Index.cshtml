@using TBA.Models.DTOs
@model List<TaskViewModel>

@{
    var username = ViewBag.Username?.ToLower();
    var userTasks = Model.Where(m => m.AssignedUserName?.ToLower() == username).ToList();
    var groupedBoards = userTasks.GroupBy(t => t.BoardName);
}


<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4 class="card-title mb-0">My tasks in: @Model.FirstOrDefault()?.BoardName</h4>
        <a asp-controller="Cards" asp-action="Create" asp-route-boardId="@ViewBag.BoardId" class="btn btn-primary">New Card</a>
    </div>

        

    @foreach (var boardGroup in groupedBoards)
    {
        <div class="mb-5 p-3 border rounded bg-light shadow-sm">
            <div class="d-flex justify-content-between align-items-center">
                <small><strong>Members:</strong> @string.Join(", ", boardGroup.First().Members ?? new List<string>())</small>
            </div>

            <div class="row mt-3">
                @foreach (var listGroup in boardGroup.GroupBy(t => t.ListName))
                {
                    <div class="col-xl-4">
                        <div class="card border shadow-sm mb-4">
                            <div class="card-body">
                                <h5 class="text-uppercase text-secondary">@listGroup.Key</h5>
                                <div class="vstack gap-2">
                                    @foreach (var task in listGroup.OrderBy(t => t.ListPosition))
                                    {
                                        @Html.Partial("Partial/_TaskCard", task)
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }

</div>